policy_module(phpfpm, 1.1)

#######################################
#
# Declarations
#

type phpfpm_t;
type phpfpm_exec_t;
init_daemon_domain(phpfpm_t, phpfpm_exec_t)

type phpfpm_tmp_t;
files_tmp_file(phpfpm_tmp_t)

type phpfpm_var_run_t;
files_pid_file(phpfpm_var_run_t)

type phpfpm_log_t;
logging_log_file(phpfpm_log_t)

type phpfpm_port_t;
corenet_port(phpfpm_port_t);

#######################################
#
# Local policy
#

allow phpfpm_t self:process signal;
allow phpfpm_t self:capability { setuid setgid kill };
allow phpfpm_t self:tcp_socket rw_stream_socket_perms;
allow phpfpm_t self:udp_socket connected_socket_perms;
allow phpfpm_t self:unix_stream_socket accept;
allow phpfpm_t self:unix_stream_socket create_stream_socket_perms;

manage_files_pattern(phpfpm_t, phpfpm_log_t, phpfpm_log_t)
logging_log_filetrans(phpfpm_t, phpfpm_log_t, file)

manage_files_pattern(phpfpm_t, phpfpm_tmp_t, phpfpm_tmp_t)
manage_dirs_pattern(phpfpm_t, phpfpm_tmp_t, phpfpm_tmp_t)
files_tmp_filetrans(phpfpm_t, phpfpm_tmp_t, {file dir})

manage_files_pattern(phpfpm_t, phpfpm_var_run_t, phpfpm_var_run_t)
files_pid_filetrans(phpfpm_t, phpfpm_var_run_t, { file sock_file })
manage_sock_files_pattern(phpfpm_t, phpfpm_var_run_t, phpfpm_var_run_t)

kernel_read_kernel_sysctls(phpfpm_t)

corecmd_read_bin_symlinks(phpfpm_t)
corecmd_search_bin(phpfpm_t)

allow phpfpm_t phpfpm_port_t:tcp_socket { name_bind };
corenet_tcp_bind_generic_node(phpfpm_t)

dev_read_rand(phpfpm_t)
dev_read_urand(phpfpm_t)

fs_getattr_xattr_fs(phpfpm_t)

files_read_etc_files(phpfpm_t)
files_read_usr_files(phpfpm_t)
files_search_var_lib(phpfpm_t)

miscfiles_read_localization(phpfpm_t)

sysnet_dns_name_resolve(phpfpm_t)
sysnet_read_config(phpfpm_t)

userdom_search_user_home_dirs(phpfpm_t)

apache_append_all_ra_content(phpfpm_t)
apache_manage_all_rw_content(phpfpm_t)
apache_read_sys_content(phpfpm_t)
apache_dontaudit_search_modules(phpfpm_t)

optional_policy(`
	mysql_tcp_connect(phpfpm_t)
')

optional_policy(`
	postgresql_tcp_connect(phpfpm_t)
	postgresql_stream_connect(phpfpm_t)
')

optional_policy(`
	snmp_read_snmp_var_lib_files(phpfpm_t)
')
